from pydantic import BaseModel, Field


class AgentFactoryOutputs(BaseModel):
    answer: str = Field(..., description="The answer to the user's question, generated by the agent.")
    final_answer: bool = Field(..., description="Whether the agent has provided a final answer to the user's question.")
    agent_instructions: str = Field(..., description="The instructions passed to the generated agent.")
    tools: str = Field(..., description="The python code that defines the tools to be used by the generated agent.")
    imports: str = Field(..., description="The python code snippet used to import the required tools.")
    structured_outputs: str = Field(..., description="The Pydantic v2 models used to structure the agent's output.")
    agent_description: str = Field(..., description="The description of the agent and what it does.")
    readme: str = Field(..., description="The run instructions in Markdown format")
    dependencies: str = Field(..., description="The dependencies line by line in Markdown format")
