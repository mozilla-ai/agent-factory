# Add new use cases for testing agent generation here
# expected_num_turns: the threshold max number of turns for the agent to complete the task
# expected_execution_time: the threshold max execution time (in seconds) for the agent to complete the task
# max_attempts: the maximum number of attempts to run the test in CI
# min_successes: the minimum number of successes for the test to be considered as pass

# Agent with no MCP tools needed
summarize-url-content:
  prompt: >
    Workflow that takes an input web URL and returns a summary of the content.
    Do not search for or assign MCP servers among the tools.
  expected_num_turns: 15
  expected_execution_time: 120
  max_attempts: 5
  min_successes: 4

# Agent with MCP single MCP server (ElevenLabs)
url-to-podcast:
  prompt: >
    Workflow to generate a short (tentatively less than 16 turns) podcast mp3 based on the contents of a URL provided by the user.
    And it should create separate mp3 files interleaving the turn-by-turn dialogue between a host and a guest speaker (you can choose their names).
    The final output should be saved as a single mp3 file.
    All files should be saved in the /tmp directory.
    Use audio generation tools from ElevenLabs API for text-to-speech (use the uvx installation).
  expected_num_turns: 40
  expected_execution_time: 420
  max_attempts: 5
  min_successes: 3

# Agent with multiple MCP servers (Slack and SQLite)
scoring-blueprints-submission:
  prompt: >
    Workflow that takes as user input a Github repo link
    and checks it against guidelines found at www.mozilla.ai/Bluerprints (check guidelines on developing top notch Blueprints).
    Then it should assess the submitted repo and give it a score out of 100.
    Finally the workflow should formulate the results with all necessary details in a suitable structured format
    and do BOTH of the following with it
    (1) post it to the blueprint-submission channel on Slack after finding the correct channel_id, and
    (2) log the entry to SQLite - to the already existing table named `github_repo_evaluations` in the `blueprints.db` database.
    Use the official MCP servers for Slack and SQLite (use the uvx installation) and provide suitable MCP configurations
    along with only the necessary subset of tools required for the task at hand.
  expected_num_turns: 40
  expected_execution_time: 420
  max_attempts: 5
  min_successes: 3
